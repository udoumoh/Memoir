{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOHN\\\\Desktop\\\\Memoir\\\\client\\\\src\\\\components\\\\Form\\\\form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useSelector } from 'react-redux';\n\nconst Form = _ref => {\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ' '\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, currentId ? 'Editing' : 'Creating', \" a Memory\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({ ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({ ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    fullWidth: true,\n    size: \"small\",\n    onClick: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useStyles","useDispatch","createPost","updatePost","useSelector","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["C:/Users/JOHN/Desktop/Memoir/client/src/components/Form/form.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport useStyles from './styles'\r\nimport { useDispatch } from 'react-redux';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst Form = ({currentId, setCurrentId}) => {\r\n    const [postData, setPostData] = useState({creator:'', title:'', message:'', tags:'', selectedFile:''})\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null) ; \r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() =>  {\r\n      if(post) setPostData(post);\r\n    }, [post]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(currentId){\r\n          dispatch(updatePost(currentId, postData))\r\n        }else{\r\n          dispatch(createPost(postData));\r\n        }\r\n\r\n        clear()\r\n\r\n    }\r\n\r\n    const clear = () => {\r\n      setCurrentId(null);\r\n      setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: ' ' })\r\n    }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant='h6'>{ currentId ? 'Editing' : 'Creating'} a Memory</Typography>\r\n        <TextField name='creator' variant='outlined' label='Creator' fullWidth value={postData.creator} onChange={(e) => setPostData({...postData, creator: e.target.value})}/>\r\n        <TextField name='title' variant='outlined' label='Title' fullWidth value={postData.title} onChange={(e) => setPostData({...postData, title: e.target.value})}/>\r\n        <TextField name='message' variant='outlined' label='Message' fullWidth value={postData.message} onChange={(e) => setPostData({...postData, message: e.target.value})}/>\r\n        <TextField name='tags' variant='outlined' label='Tags' fullWidth value={postData.tags} onChange={(e) => setPostData({...postData, tags: e.target.value.split(',')})}/>\r\n        <div className={classes.fileInput}><FileBase type='file' multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile: base64 })} /></div>\r\n        <Button className={classes.buttonSubmit} variant = 'contained' color='primary' fullWidth size='large' type='submit'>Submit</Button>\r\n        <Button  variant = 'contained' color='secondary' fullWidth size='small' onClick={clear} >Clear</Button>\r\n      </form>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module"}